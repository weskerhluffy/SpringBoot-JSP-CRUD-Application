<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
    http://www.springframework.org/schema/security 
    http://www.springframework.org/schema/security/spring-security-4.2.xsd
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">

	<!-- XXX: https://www.mkyong.com/spring-security/spring-security-http-basic-authentication-example/ -->
	<!-- XXX: https://stackoverflow.com/questions/24812902/a-universal-match-pattern-is-defined-before-other-patterns -->
	<!-- XXX: https://dzone.com/articles/spring-security-basic-authentication-example-1 -->
	<!-- XXX: https://stackoverflow.com/questions/33739359/combining-basic-authentication-and-form-login-for-the-same-rest-api -->
	<!-- XXX: https://www.concretepage.com/spring-4/spring-4-rest-security-hibernate-5-crud-example-using-annotation-and-xml -->
	<!-- XXX: https://www.boraji.com/spring-mvc-4-hibernate-5-restful-crud-operations-example -->
	<http pattern="/puta/*" realm="bitch">
		<intercept-url pattern="/**" access="isAuthenticated()" />
		<csrf disabled="true" />
		<http-basic entry-point-ref="cacaBasicAuthenticationEntryPoint" />
	</http>

	<http use-expressions="true">
		<intercept-url pattern="/login" access="isAnonymous()" />
		<intercept-url pattern="/**" access="isAuthenticated()" />

		<form-login login-page='/login' default-target-url="/caca"
			authentication-failure-url="/login?error=true" />

		<logout logout-success-url="/login" />
		<csrf disabled="true" />

		<remember-me services-ref="persistentTokenBasedRememberMeServices" />
	</http>


	<beans:bean id="cacaBasicAuthenticationEntryPoint" class="com.app.CacaBasicAuthenticationEntryPoint" />

	<beans:bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<!-- XXX: https://stackoverflow.com/questions/26975452/bcrypt-how-to-determine-whether-two-hashes-refer-to-the-same-password -->
	<!-- XXX: http://dustwell.com/how-to-handle-passwords-bcrypt.html -->
	<!-- XXX: https://crypto.stackexchange.com/questions/33696/the-internals-of-bcrypt -->
	<!-- XXX: https://yorickpeterse.com/articles/use-bcrypt-fool/ -->
	<!-- XXX: https://labs.clio.com/bcrypt-cost-factor-4ca0a9b03966 -->
	<beans:bean id="authenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="customUserDetailsService" />
		<beans:property name="passwordEncoder" ref="passwordEncoder" />
		<!-- <beans:property name="authoritiesMapper" ref="authoritiesMapper" /> -->
	</beans:bean>

	<beans:bean id="tokenRepository" class="com.app.HibernateTokenRepositoryImpl" />

	<beans:bean id="persistentTokenBasedRememberMeServices"
		class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
		<beans:constructor-arg value="remember-me" />
		<beans:constructor-arg ref="customUserDetailsService" />
		<beans:constructor-arg ref="tokenRepository" />
	</beans:bean>
	<authentication-manager>
		<authentication-provider ref="authenticationProvider" />
	</authentication-manager>

</beans:beans>